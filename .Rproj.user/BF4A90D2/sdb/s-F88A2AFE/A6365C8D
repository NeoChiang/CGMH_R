{
    "collab_server" : "",
    "contents" : "資料呈現與繪圖\n========================================================\nauthor: 曾意儒 Yi-Ju Tseng\ndate: 2017/08/07\nautosize: true\nfont-family: 'Microsoft JhengHei'\nnavigation: slide\n\n資料分析步驟\n========================================================\n- 資料匯入\n- 資料清洗處理並轉換為Tidy data\n- 資料分析\n- **資料呈現與視覺化**\n\n資料視覺化大綱\n====================================\ntype:sub-section \n\n- 資料視覺化的目的\n- ggplot2\n- ggplot2+地圖\n- 台灣面量圖\n- Heatmap\n- Treemap\n\n資料視覺化的目的\n====================================\ntype:sub-section \n- 探索圖 (Exploratory graphs)\n    - 了解資料的特性\n    - 尋找資料的模式(patterns)\n    - 建議資料分析與建模的策略\n- 結果圖 (Final graphs)\n    - 結果呈現與溝通\n    \n探索圖特性\n====================================\n- 很快就可以做一張圖\n- 主要目的是了解資料的樣子\n- 不用做圖形格式調整美化\n\n結果圖特性\n====================================\n- 比較，呈現差異\n    - 比較什麼？誰跟誰比較？\n- 呈現因果關係（causality）,機制（mechanism）,結果解釋（explanation）,系統化的結構（systematic structure）\n    - 因果模型？為什麼你想要做這樣的比較\n- 呈現多變數（Multivariate）資料\n    - 多變數（Multivariate）：超過兩個變數就叫多變數\n    - 所有真實事件都是多變數的\n\n結果圖特性\n====================================\n- 將證據整合呈現\n    - 在同一個畫面呈現文字、數字、圖表\n    - 盡量用圖形呈現資料\n- 將圖表做適當的標記與說明，包括xy軸名稱、單位、資料來源等\n    - 資料圖表必須可以呈現你想說的故事\n- 內容才是最重要的\n    - 資料不好，分析不好，圖表再美也沒有用\n    \n常用的畫圖套件\n====================================\ntype:sub-section \n\n- 基本功能(Base)：可自學\n- `lattice`：可自學\n- `ggplot2`\n\nggplot2簡介\n====================================\ntype:sub-section \n\n- Dr. Leland Wilkinson [Grammar of Graphics](http://www.springer.com/us/book/9780387245447)\n\n“In brief, the grammar tells us that a statistical graphic is a `mapping` from data to `aesthetic` attributes (colour, shape, size) of `geometric` objects (points, lines, bars). The plot may also contain statistical transformations of the data and is drawn on a specific coordinate system”\n\n-from `ggplot2` book\n\nggplot2簡介\n====================================\n- [Hadley Wickham](http://hadley.nz/)開發\n- 一直是最熱門的R packages之一\n- [ggplot2 GitHub](https://github.com/tidyverse/ggplot2)\n\nggplot2簡介\n====================================\n- 做圖的文法包括兩個最主要元素\n    - **Aesthetic attributes**：包括顏色、形狀、點的大小與線的粗細等\n    - **Geometric objects**：包括點、線、盒狀圖、直條圖等\n\n- 其他元素\n    - **Facets**：提供在同一張圖內做多個子圖的方法，只要使用Faceting功能設定子圖分類的依據參數即可\n    - **Stats**：將資料做統計轉換\n    - **Scales**：修改點線的顏色、形狀、xy軸的範圍等\n\nggplot() \n====================================\ntype:sub-section \n\n使用ggplot2作圖有以下步驟：\n\n- 準備好資料\n- 設定**Aesthetic attributes**\n    - 使用`aes(x, y, ...)`指定\n- 指定**Geometric objects**\n    - `geom_point()`\n    - `geom_line()`\n    - `geom_polygon()`\n    - `geom_errorbar()`\n\nggplot() \n====================================\n```{r warning=F, message=F}\nlibrary(ggplot2) \n##先安裝 install.packages(\"ggplot2\")\n```\n\n- ggplot(data,...)\n\nggplot() 設定重要元素\n====================================\n- **Aesthetic attributes**\n    - aes(x = Species, y = Sepal.Length)\n- **Geometric objects**\n    - geom_point()\n```{r, fig.height=3.5}\nggplot(iris, \n       aes(x = Species, y = Sepal.Length)) + \n    geom_point()\n```\n\nggplot() geom_boxpolt()\n====================================\n用`geom_boxplot()`改畫盒狀圖\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Species, \n           y = Sepal.Length)) + \n    geom_boxplot()\n```\n\nggplot() Faceting\n====================================\n**直向分類**~**橫向分類**\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length)) + \n    geom_point()+facet_grid(Species~.)\n```\n\nggplot() Faceting\n====================================\n**直向分類**~**橫向分類**\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length)) + \n    geom_point()+facet_grid(.~Species)\n```\n\nggplot() geom_smooth()\n====================================\n替xy散佈圖加上趨勢線\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length)) + \n    geom_point()+facet_grid(Species~.)+\n    geom_smooth()\n```\n\nggplot() geom_smooth()\n====================================\n替xy散佈圖加上趨勢線，使用linear regresion\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length)) + \n    geom_point()+facet_grid(Species~.)+\n    geom_smooth(method='lm')\n```\n\nggplot() geom_line()\n====================================\n改用`geom_line()`畫線\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length)) + \n    geom_line()+facet_grid(Species~.)\n```\n\nggplot() 顏色分組\n====================================\n改用顏色分組，使用`aes(color='group name')`\n```{r, fig.height=4}\nggplot(iris, \n       aes(x = Sepal.Width, \n           y = Sepal.Length,\n           color=Species)) + \n    geom_line()\n```\n\nggplot() 綜合練習 \n====================================\ntype:alert\nincremental:true\n\n- 讀入內建iris資料\n- 用**ggplot()**畫xy散佈圖\n    - x軸：Sepal.Length\n    - y軸：Sepal.Width\n    - 子圖：Species，每個Species畫在新的**欄位**\n- 用**ggplot()**做盒狀圖\n    - x軸：Species\n    - y軸：Sepal.Width\n\n\nggplot() 注意事項\n====================================\n- 提供資料時，把資料修改為想要在圖片顯示的文字\n- 如果是離散性的資料，但卻又是數值時（像是1,2,3）可以用factor()轉換\n\nggplot() 資料標示+參數設定\n====================================\n\n- 標籤 `xlab()`, `ylab()`, `labs(x=,y=)`, `ggtitle()`\n- 每一個`geom_*()`都有參數可設定\n- 圖形樣式設定 `theme()`，可使用內建樣式\n  - `theme_gray()`: 灰背景，預設樣式\n  - `theme_bw()`: 黑白樣式\n- 使用其他樣式套件\n  - `ggthemes` packages [Website](https://cran.r-project.org/web/packages/ggthemes/vignettes/ggthemes.html)\n  - `xkcd` packages [Website](http://xkcd.r-forge.r-project.org/)\n\nggplot2 參考資料\n====================================\n- [ggplot2 官網](http://ggplot2.tidyverse.org/)\n- [ggplot2 package source code](https://github.com/tidyverse/ggplot2)\n- [ggplot2 cheat sheet](https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf)\n- [ggplot2 doc](http://docs.ggplot2.org/)\n\n\nggplot2+地圖\n====================================\ntype:sub-section \n\n- Choropleth map面量圖\n- ggmap()\n- Density Map\n- 參考資料\n\n\nggmap package\n====================================\n- 把google map載入並作圖的套件\n- 基於`ggplot2`套件開發\n- 第一次使用前需要安裝\n```{r,eval=F,warning=F,message=F}\n##第一次使用前先安裝\ninstall.packages(\"ggmap\") \n```\n- `get_map()`函式取得google map圖層\n    - location 地點，可以是地名，也可以是經緯度座標\n    - zoom 放大倍率\n    - language 地圖語言\n- `ggmap()`函式將取得的圖層畫出來\n\n\nget_map() + ggmap()\n====================================\n```{r, warning=F,message=F, fig.height=5}\nlibrary(ggmap)\ntwmap <- get_map(location = 'Taiwan', \n                 zoom = 7,\n                 language = \"zh-TW\")\nggmap(twmap)\n```\n\nggmap + open data 資料載入\n====================================\n- 只要資料有經緯度等資訊，就可以使用`ggmap` package與各式資料結合呈現\n- [台北市水質資料](http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927)\n```{r message=F, warning=F}\nlibrary(jsonlite)\nlibrary(RCurl)\nWaterData<-fromJSON(getURL(\"http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927\"))\nWaterDataFrame<-WaterData$result$results\nWaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)\nWaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)\nWaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)\nWaterDataClean<-WaterDataFrame[WaterDataFrame$qua_cntu>=0,]\nhead(WaterDataClean)\n```\n\nggmap + open data 繪圖\n====================================\n```{r eval=F, message=F, warning=F}\nlibrary(ggmap)\nTaipeiMap <- get_map(\n    location = c(121.43,24.93,121.62,25.19), \n    zoom = 11, maptype = 'roadmap')\nTaipeiMapO <- ggmap(TaipeiMap)+ \n    geom_point(data=WaterDataClean, \n               aes(x=longitude, y=latitude,\n                   color=qua_cntu,size=3.5))+ \n    scale_color_continuous(\n        low = \"yellow\",high = \"red\")+ \n    guides(size=FALSE)\nTaipeiMapO\n```\n\nggmap + open data\n====================================\n```{r echo=FALSE, fig.height=8}\nlibrary(ggmap)\nTaipeiMap <- get_map(\n    location = c(121.43,24.93,121.62,25.19), \n    zoom = 11, maptype = 'roadmap')\nTaipeiMapO <- ggmap(TaipeiMap)+ \n    geom_point(data=WaterDataClean, \n               aes(x=longitude, y=latitude,\n                   color=qua_cntu,size=3.5))+ \n    scale_color_continuous(\n        low = \"yellow\",high = \"red\")+ \n    guides(size=FALSE)\nTaipeiMapO\n```\n\nggmap + 地圖型態\n====================================\n`ggmap`套件提供多種地圖型態，使用者可透過設定`maptype`自行選擇適合的地圖樣式，樣式有：\n\n- terrain\n- terrain-background\n- satellite\n- roadmap\n- hybrid (google maps)\n- watercolor\n- toner (stamen maps)\n\nggmap + extent\n====================================\n透過設定`extent`參數可將地圖輸出樣式改為滿版\n```{r eval=F,warning=F,message=F, fig.height=3}\nlibrary(ggmap)\nTaipeiMap = get_map(\n    location = c(121.43,24.93,121.62,25.19), \n    zoom = 14, maptype = 'roadmap')\n#extent = 'device' 滿版\nggmap(TaipeiMap,extent = 'device') \n```\n\nggmap + extent\n====================================\n透過設定`extent`參數可將地圖輸出樣式改為滿版\n```{r echo=F,warning=F,message=F, fig.height=8}\nlibrary(ggmap)\nTaipeiMap = get_map(\n    location = c(121.43,24.93,121.62,25.19), \n    zoom = 14, maptype = 'roadmap')\n#extent = 'device' 滿版\nggmap(TaipeiMap,extent = 'device') \n```\n\nggmap() 練習 \n====================================\ntype:alert\nincremental:true\n\n- 利用get_map() + ggmap()取得桃園地區的google 圖層\n    - location = 'Taoyuan'\n    - zoom = 11\n    - language = \"zh-TW\"\n- 在長庚大學所在地 （座標121.389539,25.035225）加上一個紅色的點\n    - geom_point()\n    - x= 121.389539\n    - y= 25.035225\n    - color =\"red\"\n\nggmap() 練習輸出圖檔\n====================================\n```{r echo=F, fig.height=8}\ntwmap <- get_map(\n    location = 'Taoyuan', \n    zoom = 11,\n    language = \"zh-TW\")\nggmap(twmap)+\n    geom_point(aes(x=121.389539,\n                   y=25.035225,\n                   color=\"red\"))\n```\n\n\nggmap 參考資料\n====================================\n- [ggmap package source code](https://github.com/dkahle/ggmap)\n- [ggmap cheat sheet](https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/ggmap/ggmapCheatsheet.pdf)\n- [ggmap doc](https://dl.dropboxusercontent.com/u/24648660/ggmap%20useR%202012.pdf)\n\n\nChoropleth map面量圖\n====================================\n- Choropleth map[面量圖](https://en.wikipedia.org/wiki/Choropleth_map)\n- **把統計資料用顏色畫在對應的地圖上**\n- `choroplethr` package來畫面量圖\n- 基於`ggplot2` package的`面量圖`做圖工具\n- 建議同時安裝`choroplethrMaps` package\n```{r,eval=F,warning=F,message=F}\n##第一次使用前先安裝\ninstall.packages(c(\"choroplethr\",\n                   \"choroplethrMaps\")) \n```\n```{r, warning=F,message=F}\nlibrary(choroplethr)\n```\n\nchoroplethr package\n====================================\n- 內建美國各州地圖與人口學資料\n- 使用`state_choropleth()`函式畫出美國人口分布\n```{r, fig.height=3.5}\ndata(df_pop_state) #記載各州人口數的資料\n#把各州人口畫在地圖上\nstate_choropleth(df_pop_state) \n```\n\nTaiwan的面量圖\n====================================\ntype:sub-section \n\n- 台灣的面量圖尚無好的套件輔助\n- Open Data: 台灣鄉鎮市邊界的經緯度檔案\n    - [鄉鎮市區界線](http://data.gov.tw/node/7441)\n    - 空間資料開放格式`shapefile` `.shp`\n- 使用`shapefile`與`ggplot2`畫圖的步驟如下：\n    - 取得空間資料檔案\n    - 使用`rgdal`, `rgeos`,`maptools` package處理地圖檔shapefile\n    - 使用`ggplot2` & `RColorBrewer` 畫圖\n- [實作範例網址](http://yijutseng.github.io/DataScienceRBook/vis.html#taiwan)\n\nHeatmap\n====================================\ntype:sub-section \n- 熱度圖\n- 使用顏色的深淺來表示數值的大小\n- 搭配XY兩軸的變量\n- 使用一張圖就能表示三個維度的資訊\n- 在ggplot2套件中，可以使用`geom_tile()`來畫Heatmap\n- 以下以NBA球員的資料作為範例\n\nHeatmap\n====================================\n```{r message=FALSE,warning=F}\n#讀.csv檔案\nnba <- read.csv(\"http://datasets.flowingdata.com/ppg2008.csv\")\nhead(nba,3)\n```\n\nHeatmap\n====================================\n為了做圖，將寬表轉長表\n```{r eval=F,message=FALSE,warning=F}\nlibrary(reshape2) #for melt()\n#寬表轉長表,以名字作依據\nnba.m <- melt(nba,id.vars = \"Name\") \nhead(nba.m,5)\n```\n```{r echo=F,message=FALSE,warning=F}\nlibrary(reshape2) \nnba.m <- melt(nba,id.vars = \"Name\") \nknitr::kable(head(nba.m,5))\n```\n\ngeom_tile()\n====================================\n將Geometric objects指定為`geom_tile()`\n```{r message=FALSE,warning=F,fig.height=4}\nlibrary(ggplot2) #for ggplot()\nggplot(nba.m, aes(variable, Name)) + \n    geom_tile(aes(fill = value),\n              colour = \"white\")+ \n    scale_fill_gradient(\n        low = \"white\",high = \"steelblue\") \n```\n\ngeom_tile() + scale()\n====================================\n- 因為G欄資料明顯大於其他欄位，導致顏色差異不明顯\n- 將個欄位的資料標準化處理\n\n```{r eval=F,message=FALSE,warning=F,fig.height=4}\n#scale處理\nlibrary(dplyr)\nnba.s<-nba %>% \n    mutate_each(funs(scale), -Name) \nhead(nba.s,2)\n```\n```{r echo=F,message=FALSE,warning=F,fig.height=4}\n#scale處理\nlibrary(dplyr)\nnba.s<-nba %>% \n    mutate_each(funs(scale), -Name) \nknitr::kable(head(nba.s,2))\n```\n\ngeom_tile() + scale()\n====================================\n```{r message=FALSE,warning=F,fig.height=4}\nnba.s.m <- melt(nba.s) ##寬轉長\nggplot(nba.s.m, aes(variable, Name)) + \n    geom_tile(aes(fill = value),\n              colour = \"white\")+ \n    scale_fill_gradient(\n        low = \"white\",high = \"steelblue\") \n```\n\n[How to Make a Heatmap – a Quick and Easy Solution](http://flowingdata.com/2010/01/21/how-to-make-a-heatmap-a-quick-and-easy-solution/)\n\nHeatmap 練習 \n====================================\ntype:alert\nincremental:true\n\n- 下載[小兒麻痺盛行率](https://raw.githubusercontent.com/CGUIM-BigDataAnalysis/BigDataCGUIM/master/104/POLIO_Incidence.csv)資料\n- 將資料載入R\n- 表格是寬表，需要轉成長表\n- 有缺值 （-），用NA取代\n    - 方法一 gsub()\n    - 方法二 ifelse()\n- 盛行率欄位轉換成數值\n    - as.numeric()\n- 用年份當x軸，州名當y軸，區塊顏色用盛行率填入\n    - low = \"white\",high = \"steelblue\"\n\nTreemap\n====================================\ntype:sub-section \n- Treemap(矩形式樹狀結構繪圖法)\n- 以二維平面的方式展示包含階層結構（hierarchical）形式的統計資訊\n- `treemap` packages\n\ntreemap() data\n====================================\n```{r treemap1,message=FALSE,warning=F,fig.height=4}\nlibrary(treemap)\ndata(GNI2014)\nknitr::kable(head(GNI2014))\n```\n\ntreemap()\n====================================\n```{r treemap2,message=FALSE,warning=F,fig.height=4}\nlibrary(treemap)\ndata(GNI2014)\ntreemap(GNI2014,\n       index=c(\"continent\", \"iso3\"), #分組依據\n       vSize=\"population\", #區塊大小\n       vColor=\"GNI\", #顏色深淺\n       type=\"value\")\n```\n\n互動式資料呈現\n====================================\n\n- [互動式資料呈現](http://yijutseng.github.io/DataScienceRBook/InteractiveGraphics.html)\n- [ggvis](http://yijutseng.github.io/DataScienceRBook/InteractiveGraphics.html#ggvis)\n- [googleVis](http://yijutseng.github.io/DataScienceRBook/InteractiveGraphics.html#googlevis)\n- [Plot.ly](http://yijutseng.github.io/DataScienceRBook/InteractiveGraphics.html#plot.ly)\n\n參考資料\n====================================\ntype:sub-section \n\n- 官方網站[文件](http://docs.ggplot2.org/current/)\n- RStudio製作的[ggplot cheat sheet](https://www.rstudio.com/wp-content/uploads/2016/11/ggplot2-cheatsheet-2.1.pdf)\n- DataCamp課程1 [Data Visualization with ggplot2 (Part 1)](https://www.datacamp.com/courses/data-visualization-with-ggplot2-1)\n- DataCamp課程2 [Data Visualization with ggplot2 (Part 2)](https://www.datacamp.com/courses/data-visualization-with-ggplot2-2)\n- DataCamp課程3 [Data Visualization with ggplot2 (Part 3)](https://www.datacamp.com/courses/data-visualization-with-ggplot2-3)\n- [每個人心中都有一碗巷口的牛肉湯](http://tequila1979.blogspot.tw/2017/01/blog-post.html)\n\n",
    "created" : 1500611284667.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2976911626",
    "id" : "A6365C8D",
    "lastKnownWriteTime" : 1500611441,
    "last_content_update" : 1500611441276,
    "path" : "C:/Users/yjtseng/Dropbox/CGU/CGMH_R/Visualization.Rpres",
    "project_path" : "Visualization.Rpres",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_presentation"
}