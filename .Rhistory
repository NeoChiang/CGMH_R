View(OptDiagS)
View(OptOrderS)
inner_join(OptDiagS,
OptOrderS,
by=c("歸戶代號","門診號"))
joined<-inner_join(OptDiagS,
OptOrderS,
by=c("歸戶代號","門診號"))
View(joined)
DiagSumS
DiagSumS <- read_csv("DiagSumS.csv")
DiagSumS$性別
filter(DiagSumS,性別=="M"&居住地=="高雄市")
DiagSumS$居住地
filter1<-filter(DiagSumS,性別=="M"&居住地=="高雄市")
select(filter1,性別,starts_with("診斷類別"),住院天數,住院日期)
filter1<-
filter(DiagSumS,
性別=="M"&居住地=="高雄市")
select1<-
select(filter1,
性別,
starts_with("診斷類別"),
住院天數,住院日期)
View(filter1)
View(select1)
summarise(filter1,
nE=sum(來源別=="E"),
nTu=sum(grepl("腫瘤",診斷類別名稱1)))
filter1<-
filter(DiagSumS,住院天數>30)
summarise(filter1,
nE=sum(來源別=="E"),
nTu=sum(grepl("腫瘤",診斷類別名稱1)))
filter1<-
filter(DiagSumS,住院天數>30)
summarise(filter1,
nE=sum(來源別=="E"),
nTu=sum(grepl("腫瘤",診斷類別名稱1)))
filter1
summarise(filter1,
nE=sum(來源別=="E"),
nTu=sum(grepl("腫瘤",診斷類別名稱1)))
library(tableone)
install.packages("tableone")
library(readr)
# 讀入疾病統計檔資料，請將檔案放在專案路徑下
DiagSumS <- read_csv("DiagSumS.csv")
#install.packages("tableone")
library(tableone)
t1<-CreateTableOne(data=DiagSumS,
strata = "性別",
vars = c("年齡","來源別","住院天數"))
print(t1, quote = TRUE, noSpaces = TRUE)
library(ggplot2)
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()+facet_grid(.~Species)
ggplot(iris,
aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()+facet_grid(.~Species)
ggplot(iris,
aes(x=Species,y=Sepal.Width))+
geom_boxplot()
twmap <- get_map(
location = 'Taoyuan',
zoom = 11,
language = "zh-TW")
library(ggmap)
install.packages("ggmap")
library(ggmap)
twmap <- get_map(
location = 'Taoyuan',
zoom = 11,
language = "zh-TW")
ggmap(twmap)+
geom_point(aes(x=121.389539,
y=25.035225),
color="red")
library(dplyr)
DiagSumHM <- DiagSumS %>% rename(Dept=住院科別) %>%
group_by(Dept,Year) %>%
summarise(HosStay=mean(住院天數),N=n())
DiagSumS <- read_csv("DiagSumS.csv")
DiagSumS$Year<-substr(DiagSumS$住院日期,1,4)
head(
DiagSumS[,c("住院科別","住院日期","住院天數","Year")])
DiagSumHM <- DiagSumS %>% rename(Dept=住院科別) %>%
group_by(Dept,Year) %>%
summarise(HosStay=mean(住院天數),N=n())
DeptList<-DiagSumHM[DiagSumHM$N>10,]$Dept
DiagSumHM<-DiagSumHM %>%
filter(Dept %in% DeptList)
head(DiagSumHM)
DeptList
DeptList
head(DiagSumHM)
DiagSumHM
low = "white",high = "steelblue") +
theme_bw()
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue") +
theme_bw()
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue")
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay))+
scale_fill_gradient(
low = "white",high = "steelblue")
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue")
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay),
colour = "white")
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue")
ggplot(DiagSumHM, aes(Year, Dept)) +
geom_tile(aes(fill = HosStay))
POLIO_Incidence <-
read_csv("https://raw.githubusercontent.com/CGUIM-BigDataAnalysis/BigDataCGUIM/master/104/POLIO_Incidence.csv")
library(readr)
POLIO_Incidence <-
read_csv("https://raw.githubusercontent.com/CGUIM-BigDataAnalysis/BigDataCGUIM/master/104/POLIO_Incidence.csv")
?gather
library(tidyr)
?gather
POLIO_Incidence
POLIO_Incidence.l<-gather(POLIO_Incidence,key = State,value=Incidence,-YEAR,-WEEK)
POLIO_Incidence.l
POLIO_Incidence.l$Incidence<-gsub("-",NA,POLIO_Incidence.l$Incidence)
POLIO_Incidence.l$Incidence<-as.numeric(POLIO_Incidence.l$Incidence)
ggplot(POLIO_Incidence.l, aes(YEAR, variable)) +
geom_tile(aes(fill = Incidence),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue")
library(ggplot2)
ggplot(POLIO_Incidence.l, aes(YEAR, variable)) +
geom_tile(aes(fill = Incidence),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue")
library(dplyr)
POLIO_Incidence.l.y<-
POLIO_Incidence.l %>% group_by(YEAR,State) %>%
summarize(IncidenceSum=sum(Incidence,na.rm = T))
library(ggplot2)
polioPlot<-ggplot(POLIO_Incidence.l.y, aes(YEAR, State)) +
geom_tile(aes(fill = IncidenceSum),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue") +
theme_minimal()
POLIO_Incidence.l
polioPlot<-ggplot(POLIO_Incidence.l.y, aes(YEAR, State)) +
geom_tile(aes(fill = IncidenceSum),
colour = "white")+
scale_fill_gradient(
low = "white",high = "steelblue") +
theme_minimal()
POLIO_Incidence.l.y
polioPlot
library(readr)
EMDiagS <- read_csv("~/GitHub/CGMH_R/EMDiagS.csv")
View(EMDiagS)
library(readr)
EMDiagS <- read_csv("EMDiagS.csv") #自行載入
View(EMDiagS)
as.numeric("abc")
as.character(EMDiagS$資料年月)
library(readr)
EMDiagS <-
read_csv("~/GitHub/CGMH_R/EMDiagS.csv")
View(EMDiagS)
View(EMDiagS)
class(EMDiagS$輸入日期)
library(lubridate)
ymd('2012/3/3')
library(lubridate)
ymd('2012/3/3')
EMDiagS$輸入日期
ymd(EMDiagS$輸入日期)
ymd(EMDiagS$輸入日期)
class(EMDiagS$輸入日期)
View(iris)
iris$Time<-1
View(iris)
EMDiagS$輸入日期Date<-
ymd(EMDiagS$輸入日期)
class(EMDiagS$輸入日期Date)
class(EMDiagS$輸入日期Date)
grep("A|a",c("Alex","Tom","Amy","Joy","Emma"))
grep("A|a|l|e",c("Alex","Tom","Amy","Joy","Emma"))
grep("A|a|o",c("Alex","Tom","Amy","Joy","Emma"))
EMDiagS$疾病碼
grep("250",EMDiagS$疾病碼)
grepl("250",EMDiagS$疾病碼)
grep("250",EMDiagS$疾病碼)
EMDiagS$疾病碼[62]
EMDiagS$疾病碼[1574]
1:3
1:20
iris[1:10,"Species"]
nrow(iris)
seq(1,nrow(iris),2)
colnames(iris)
EMDiagS$疾病碼=="25000"
EMDiagS[EMDiagS$疾病碼=="25000",]
EMDiagS[EMDiagS$疾病碼=="25000",]
EMDiagS[grep("^250",EMDiagS$疾病碼),]
check<-EMDiagS[grep("^250",EMDiagS$疾病碼),]
View(check)
NameID<-data.frame(Name=c("Tom","Amy","John"),ID=c(1,2,3))
Score<-data.frame(ID=c(1,3),Score=c(90,100))
View(NameID)
View(Score)
library(dplyr)
inner_join(NameID,Score)
full_join(NameID,Score)
semi_join(NameID,Score)
inner_join(NameID,Score)
OptDiagS <- read_csv("OptDiagS.csv")
OptOrderS <- read_csv("OptOrderS.csv")
OptDiagOrder<-inner_join(OptDiagS,OptOrderS,
by=c("歸戶代號","門診號"))
View(OptDiagOrder)
View(OptDiagS)
View(OptOrderS)
table(EMDiagS$掛號科別)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length)) +
geom_point()+facet_grid(.~Species)
library(ggplot2)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length)) +
geom_point()+facet_grid(.~Species)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()
ggplot(iris,aes(x=Sepal.Length,y=Sepal.Width))+
geom_point()+facet_grid(.~Species)
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot()
ggplot(iris,aes(x=Species,y=Sepal.Width))+
geom_boxplot()+labs(x="test x",y="test y")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_fill_grey(start = 0.2, end = 0.8,
na.value = "red")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0.2, end = 0.8,
na.value = "red")
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0.4, end = 1)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.8)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.7)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.6)
ggplot(iris,
aes(x = Sepal.Width,
y = Sepal.Length,
color=Species)) +
geom_point()+theme_bw()+
scale_color_grey(start = 0, end = 0.9)
library(SportsAnalytics)
#擷取2015-2016年球季球員資料
NBA1516<-fetch_NBAPlayerStatistics("17-18")
library(mlbench)
library(mlbench)
data("PimaIndiansDiabetes")
?PimaIndiansDiabetes
data("ToothGrowth")
ToothGrowth
?ToothGrowth
lm(len~dose,
data =ToothGrowth)
glm(len ~ supp+dose,
data =ToothGrowth)
PimaIndiansDiabetes$library(mlbench)
data("PimaIndiansDiabetes2")
library(mlbench)
data("PimaIndiansDiabetes2")
fit<-glm(diabetes~.,
data =PimaIndiansDiabetes2[PimaIndiansDiabetes2$Test==F,])
summary(fit)$coefficients
fit<-glm(diabetes~.,
data =PimaIndiansDiabetes2)
summary(fit)$coefficients
View(PimaIndiansDiabetes2)
?predict
str)PimaIndiansDiabetes2
str(PimaIndiansDiabetes2)
library(caret)
set.seed(3456)
trainIndex <-
createDataPartition(iris$Species,
p = .8,
list = FALSE,
times = 1)
head(trainIndex)
iris$fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
trainIndex <-
createDataPartition(iris$Species,
p = .8,
list = FALSE,
times = 1)
head(trainIndex)
trainData<-iris[trainIndex,]
testData<-iris[-trainIndex,]
set.seed(825)
DTFit1 <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl)
DTFit1
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE,
summaryFunction = twoClassSummary)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
fitControl <-
trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10,
classProbs = TRUE,
summaryFunction = twoClassSummary)
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
set.seed(825)
DTFitROC <- train(Species ~ ., data = trainData,
method = "rpart",
trControl = fitControl,
metric = "ROC")
DTFitROC
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .8,
list = FALSE,
times = 1)
head(trainIndexBinary)
library(mlbench)
data("PimaIndiansDiabetes2")
PD2<-
PimaIndiansDiabetes2[complete.cases(PimaIndiansDiabetes2),]
head(PD2$diabetes)
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .8,
list = FALSE,
times = 1)
head(trainIndexBinary)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
fitControlBinary <-
trainControl(method = "repeatedcv",
number = 10,
repeats = 10,
## Estimate class probabilities
classProbs = TRUE,
## Evaluate performance using
## the following function
summaryFunction = twoClassSummary)
set.seed(825)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
library(caret)
set.seed(3456)
trainIndexBinary <-
createDataPartition(PD2$diabetes,
p = .75,
list = FALSE,
times = 1)
head(trainIndexBinary)
```
caret: data splitting
====================================
`createDataPartition`
```{R}
trainDataBinary<-PD2[trainIndexBinary,]
testDataBinary<-PD2[-trainIndexBinary,]
set.seed(825)
DTFitBinary <- train(diabetes ~ ., data = trainDataBinary,
method = "rpart",
trControl = fitControlBinary,
## Specify which metric to optimize
metric = "ROC")
DTFitBinary
pred<-predict(DTFitBinary,
newdata = testDataBinary,
type = "prob")
pred
confusionMatrix(data = pred, reference = testBinary$diabetes)
confusionMatrix(data = pred$pos, reference = testBinary$diabetes)
install.packages("mlbench")
install.packages("rpart.plot")
?boxplot
plot(x=PD2[PD2$Test==T,"diabetes"],
y=predictPoint)
library(pROC)
?roc
library(readr)
DiagSum <- read_csv("DiagSumS.csv")
str(DiagSum)
View(DiagSum)
DiagSum$DiagSum %>%
filter(診斷類別1 %in% c("174.0","174.1"))
library(dplyr)
DiagSum %>%
filter(診斷類別1 %in% c("174.0","174.1"))
SelectedCase<-DiagSum %>%
filter(診斷類別1 %in% c("1740","1741"))
View(SelectedCase)
SelectedCase %>%
select(歸戶代號,診斷類別1,住院日期) %>% head()
library(lubridate)
DiagSum$住院日期
